#! /Users/macl2/anaconda/bin/python -tt
'''
Each new term in the Fibonacci sequence is generated by adding the previous 
two terms. By starting with 1 and 2, the first 10 terms will be:

          1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not 
exceed four million, find the sum of the even-valued terms.
'''

def main():
  
  Fib0=1                       # declare the original Fibonacci values
  Fib1=2
  sum=0
  Fiblist = []                 # not part of the problem, but create a list
                               # so I can just see the values
  
  while(Fib0<=4000000):        # loop over the values so that they don't exceed 4000000
      temp = Fib1              # remember the highest Fibonacci number of the pair
      Fib1 = Fib0+Fib1         # find the next Fibonacci number
      Fib0 = temp              # assign the new lowest number to the previos highest number
  	
      if Fib0%2==0:            # find the even values of the Fibonacci sequence
          sum += Fib0          # sum these even values
          Fiblist.append(Fib0) # add the even values to the list
  
  print 'Sum = ', sum          # print the sum
  print Fiblist                # print the list
  
  return
  
if __name__ == '__main__':
  main()